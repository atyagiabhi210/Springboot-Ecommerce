{"ast":null,"code":"var _jsxFileName = \"/Users/abhishektyagi/Developer/nonu/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport * as authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n        authService.setAuthToken(token);\n      } catch (error) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      const {\n        token,\n        ...userData\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      authService.setAuthToken(token);\n      setUser(userData);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      await authService.register(userData);\n      toast.success('Registration successful! Please login.');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    authService.removeAuthToken();\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'ADMIN'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","setAuthToken","error","removeItem","login","credentials","response","data","setItem","stringify","success","_error$response","message","register","_error$response2","logout","removeAuthToken","value","isAuthenticated","isAdmin","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishektyagi/Developer/nonu/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport * as authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        const userData = localStorage.getItem('user');\n\n        if (token && userData) {\n            try {\n                setUser(JSON.parse(userData));\n                authService.setAuthToken(token);\n            } catch (error) {\n                localStorage.removeItem('token');\n                localStorage.removeItem('user');\n            }\n        }\n        setLoading(false);\n    }, []);\n\n    const login = async (credentials) => {\n        try {\n            const response = await authService.login(credentials);\n            const { token, ...userData } = response.data;\n\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(userData));\n            authService.setAuthToken(token);\n            setUser(userData);\n\n            toast.success('Login successful!');\n            return { success: true };\n        } catch (error) {\n            const message = error.response?.data || 'Login failed';\n            toast.error(message);\n            return { success: false, error: message };\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            await authService.register(userData);\n            toast.success('Registration successful! Please login.');\n            return { success: true };\n        } catch (error) {\n            const message = error.response?.data || 'Registration failed';\n            toast.error(message);\n            return { success: false, error: message };\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        authService.removeAuthToken();\n        setUser(null);\n        toast.success('Logged out successfully');\n    };\n\n    const value = {\n        user,\n        loading,\n        login,\n        register,\n        logout,\n        isAuthenticated: !!user,\n        isAdmin: user?.role === 'ADMIN'\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}